c
Property.types
Property
c
Property
c
@property = Property.find(params[:id])
c
 @property = Property.find(params[:id])
c
 @property = Property.find(params[:id])
c
JWT.decode(token,SECRET_KEY)
JWT.decode(token,SECRET_KEY)c
JWT.decode(token,SECRET_KEY)
c
@property.save!
@property.save
 @property = Property.new(property_params)
c
params.permit
params.permitted
params.permitted!
params
 @property = Property.new(property_params)
c
params
Property.new!(property_params)
property_params
Property.new(property_params)
c
params
Property.new(property_params)
c
params
property_params
Property.new(property_params)
c
Property.types.keys
Property.types
Property
c
render 'properties/new'
c
JWT.decode(token,SECRET_KEY)[0]
c
@current_user.admin_user?
@current_user.role
@current_user
current_user
c
@current_user = User.find_by_id(decoded[:user_id])
@current_user = AccountBlock::Account.find_by_id(decoded[:user_id])
decoded = jwt_decode(header)
header = header.split(" ").last if header
header = params[:auth_token]
params[:auth_token]
params
request.headers["auth_token"]
request.headers
request.headers["Authorization"]
request
c
request.headers["Authorization"]
c
request.headers["Authorization"]
params
c
request
request.headers["token"]
request.headers["Authorization"]
c
user_params
c
user_params
c
a.save!
a = User.new(user_params)
c
n
a = User.new(user_params)
c
User.new(user_params)
a = Registration.new(user_params)
user_params
c
n
user_params
c
params[:@user].permit(:name, :email,:role)
params[:@user]
params
user_params
c
token = jwt_encode(user_id: @account.id)
@account.id
c
@account = User.find_by(email: params[:@user][:email])
params[:@user][:email] = "xcz"
User.all
@account = User.find_by(email: params[:@user][:email])
@account = User.find_by(email: params[:email])
params[:@user][:email]
params[:@user]
params[@user]
params["user"]
params["user]
params[:user]
params
params[:email]
c
@account
c@account
c
n
params
c
params[:email]
@account = User.find_by(email: params[:email])
